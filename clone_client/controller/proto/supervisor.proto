syntax="proto3";

package clone.controller;

import "google/protobuf/empty.proto";

import "clone_client/proto/data_types.proto";

service SupervisorGRPC {
  rpc GetPressureGenInfo(google.protobuf.Empty) returns (PressureGenInfoResponse);
  rpc StartPressureGen(google.protobuf.Empty) returns (clone.data_types.ServerResponse);
  rpc StopPressureGen(google.protobuf.Empty) returns (clone.data_types.ServerResponse);
  rpc SetPressureGenPressure(clone.data_types.PressureGenPressure) returns (clone.data_types.ServerResponse);
  rpc SetMuscles(clone.data_types.MuscleMovement) returns (clone.data_types.ServerResponse);
  rpc LooseMuscles(google.protobuf.Empty) returns (clone.data_types.ServerResponse);
  rpc LockMuscles(google.protobuf.Empty) returns (clone.data_types.ServerResponse);
  rpc SetPressures(clone.data_types.MusclePressureSetting) returns (clone.data_types.ServerResponse);
  rpc GetValves(clone.data_types.GetNodesRequest) returns (ValveListResponse);
}

message ValveListResponse{
  clone.data_types.MusclesValveInfo valve_list=1;
  clone.data_types.ServerResponse response=2;
}

enum PressureGenVariant {
  AIR_COMPRESSOR=0;
  WATER_PUMP=1;
}

message PressureGenInfo {
  float desired_pressure=1;
  float pressure=2;
  bool is_running=3;
  bool is_active=4;
  float temperature=5;
  PressureGenVariant variant=6;
}

message PressureGenInfoResponse {
  PressureGenInfo info=1;
  clone.data_types.ServerResponse response=2;
}