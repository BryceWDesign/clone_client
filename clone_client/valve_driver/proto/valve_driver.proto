syntax="proto3";

package clone.valve_driver;

import "google/protobuf/empty.proto";

import "clone_client/proto/data_types.proto";

service ValveDriverGRPC {
  rpc SendDirect (SendDirectMessage) returns (clone.data_types.ServerResponse);
  rpc SendManyDirect (SendManyDirectMessage) returns (clone.data_types.ServerResponse);
  rpc SendImpulse (SendImpulseMessage) returns (clone.data_types.ServerResponse);
  rpc SendManyImpulse (SendManyImpulseMessage) returns (clone.data_types.ServerResponse);
  rpc SendPulse (SendPulseMessage) returns (clone.data_types.ServerResponse);
  rpc SendManyPressure (SendManyPressureMessage) returns (clone.data_types.ServerResponse);
  rpc StreamManyPressure (stream SendManyPressureMessage) returns (clone.data_types.ServerResponse);

  rpc GetAllNodes (GetNodesMessage) returns (NodeList);
  rpc GetControllineNodes (GetNodesMessage) returns (NodeList);
  rpc GetTelemetrylineNodes (GetNodesMessage) returns (NodeList);
}

message SendDirectMessage {
  uint32 node_id = 1;
  uint32 valves = 2;
}

message SendManyDirectMessage {
  map<uint32, uint32> data = 1;
}

message ImpulseControl {
  uint32 valves = 1;
  uint32 delay = 2;
}

message SendImpulseMessage {
  uint32 node_id = 1;
  ImpulseControl control = 2;
}

message SendManyImpulseMessage {
  map<uint32, ImpulseControl> data = 1;
}

message SendPulseMessage {
  uint32 node_id = 1;
  uint32 valve_id = 2;
  uint32 pulse_len_ms = 3;
  uint32 delay_len_ms = 4;
  uint32 duration_ms = 5;
}

message PressureControl {
  repeated int32 pressures = 1;
}

message SendManyPressureMessage {
  map<uint32, PressureControl> data = 1;
}


message GetNodesMessage {
  bool rediscover = 1;
}

message NodeList {
  repeated uint32 values = 1;
}
